# -*- coding: utf-8 -*-
"""WebScrapping_Week5.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Ig1oi_BopKgebyROKc7bmfC67rFyPUDZ
"""

import requests
from bs4 import BeautifulSoup as bs
import pandas as pd

"""a function to send book tags to the book_details function"""

def book_tags():
    b_soup = get_soup(url)
    book_tags=b_soup.find_all('article',class_='product_pod')
    books=[]

    for i in book_tags:
        books.append(book_details(i))
    return books

"""Getting book details such as =>

Book name

Rating

Price of the Book

Link for the book

Generalising these to multiple books so making it as a function
"""

def book_details(book_tag):
    book_title = book_tag.find('a', title=True)['title']
    book_rating = book_tag.find('p')['class'][1]
    book_price = book_tag.find('p', class_='price_color').text[1:]
    book_link = 'http://books.toscrape.com/' + book_tag.find('a')['href']
    return book_title, book_rating, book_price, book_link

"""This bloack of code gives only the first twenty entries of the home page

"""

url="http://books.toscrape.com/"
response = requests.get(url)

#Converting to BeautifulSoup

b_soup= bs(response.text)
book_list = book_tags();
print(len(book_list))

def get_soup(url):
    """Takes URL and returns a soup object"""
    resp = requests.get(url)
    if resp.status_code == 200:
        return bs(resp.text)
    else: return None

def data_collection(page):
    books=[]
    for i in range(1,page+1):
        url= f'http://books.toscrape.com/catalogue/page-{i}.html'
        b_soup=get_soup(url)
        if b_soup:
            try:
                book_tags = b_soup.find_all('article', class_='product_pod')

                for book_tag in book_tags:
                    books.append(book_details(book_tag))
            except:
                print(f'Error reading page {i} . . .')
    books = pd.DataFrame(books,columns=['title','rating','price','link'])
    return books

books_frame = data_collection(50)
books_frame.info()

"""Converting to csv file"""

books_frame.to_csv('books.csv',index=False)